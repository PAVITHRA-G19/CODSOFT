import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn import metrics
import matplotlib.pyplot as plt
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

data=pd.read_csv('Downloads/advertising.csv')
data.head()

# Assuming 'data' is your DataFrame containing the provided data
X = data[['TV', 'Radio', 'Newspaper']]
y = data['Sales']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a linear regression model
model = LinearRegression()

# Fit the model to the training data
model.fit(X_train, y_train)

# Make predictions on the test data
predictions = model.predict(X_test)

# Evaluate the model
print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, predictions))
print('Mean Squared Error:', metrics.mean_squared_error(y_test, predictions))
print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))

# Plotting actual sales with purple color
plt.scatter(y_test, y_test, color='purple', label='Actual Sales')

# Plotting predicted sales with orange color
plt.scatter(y_test, predictions, color='orange', label='Predicted Sales')

plt.xlabel('Sales')
plt.ylabel('Sales')
plt.title('Actual vs. Predicted Sales')
plt.legend()
plt.show()

# Get feature importance
feature_importance = model.coef_

# Plotting feature importance
plt.bar(X.columns, feature_importance)
plt.xlabel('Features')
plt.ylabel('Coefficient Value')
plt.title('Feature Importance Plot')
plt.xticks(rotation=45, ha='right')
plt.show()
